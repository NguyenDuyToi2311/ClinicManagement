"""
Django settings for Back_API project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os, datetime
from datetime import timedelta
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-s-kvyz2^m(g7f5ek(^j-f51!*j55@2-gd#emy&ut*+x73b(mfn"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # Gói (third party package)
    "corsheaders",  # để xử lý các tiêu đề máy chủ cần thiết cho Chia sẻ tài nguyên nguồn gốc chéo
    
    
    "rest_framework",  # kích hoạt và sử dụng DRF xây dựng các API mạnh mẽ và linh hoạt dễ dàng hơn
    "rest_framework_simplejwt",
    "rest_framework.authtoken",
    #"rest_framework.authtoken",  # trong API để đảm bảo tính bảo mật và xác thực của người dùng
    #"rest_framework_simplejwt",  # Plugin xác thực JSON Web Token tối thiểu cho Django
    
    
    "Models_API.apps.ModelsApiConfig",
    # "API_generic",
]
# CORS_ORIGIN_ALLOW_ALL = True
DATE_INPUT_FORMATS = ["%d/%m/%Y"]
CORS_ALLOWED_ORIGINS = [
    'http://localhost:4200',
    'http://localhost:8000'
]


# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^https://\w+\.domain\.com$",
# ]
APPEND_SLASH = True


# os.environ["DJANGO_SETTINGS_MODkULE"] = "Back_API.settings"

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "Back_API.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Back_API.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [  # xác định các lớp xác thực (authentication classes)
        "rest_framework.authentication.SessionAuthentication",  # Xác thực dựa trên phiên làm việc (session) của người dùng
        "rest_framework.authentication.BasicAuthentication",    # Xác thực cơ bản về đăng nhập (username và password)
        "rest_framework.authentication.TokenAuthentication",  # Xác thực dựa trên mã thông báo (token)
        #'rest_framework.authentication.RemoteUserAuthentication',
        # 'rest_framework.authentication.JWTAuthentication',
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # "rest_framework_jwt.authentication.JSONWebTokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [  # Xác định các lớp quyền (permission classes)
        "rest_framework.permissions.AllowAny",  # Cho phép truy cập không cần xác thực hoặc phân quyền
        "rest_framework.permissions.IsAuthenticated",  # Yêu cầu người dùng đã xác thực để truy cập
        #"rest_framework.permissions.IsAdminUser",  # Yêu cầu người dùng là quản trị viên để truy cập.
        #'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        # Cho phép truy cập cho người dùng đã xác thực, nhưng chỉ đọc (readonly) cho người dùng chưa xác thực.
        #'rest_framework.permissions.DjangoModelPermissions',
        # Phân quyền dựa trên quyền hạn của Django Model. Bao gồm các quyền như view, add, change, delete
        #"rest_framework.permissions.IsAuthenticatedOrReadOnly",
    ],
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    #'DEFAULT_PAGINATION_CLASS': 'apps.core.pagination.StandardResultsSetPagination',
    # "PAGE_SIZE": 5,
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
    'SLIDING_TOKEN_LIFETIME': timedelta(days=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME_LIFT': timedelta(days=7),
    # 'SLIDING_TOKEN_REFRESH_LIMIT': False,
    # 'SLIDING_TOKEN_REFRESH_EVERY': False,
    # 'SLIDING_TOKEN_LIFETIME_LIFT': False,
    # 'ROTATE_REFRESH_TOKENS': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': settings.SECRET_KEY,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
    'TOKEN_TYPE_CLAIM': 'token_type',
}
